This is a quick and easy way to ensure that your merges will be fast-forwarded.

#prechecks

mkdir proj2
cd proj2
git init
touch file1
touch file2
git add .
git commit -am "start developing a feature"

# Start a new feature

git checkout -b new-feature master

# Edit files

cat > file1

git commit -a -m "Start developing a feature"

In the middle of our feature, we realize there’s a security hole in our project:

# Create a hotfix branch based off of master

git checkout -b hotfix master

# Edit files
cat > file2
git commit -a -m "Fix security hole"

# Merge back into master
git checkout master
git merge hotfix
git branch -d hotfix

After merging the hotfix into master, we have a forked project history. Instead of a plain git merge, we’ll integrate the feature branch with a rebase to maintain a linear history:
git checkout new-feature
git rebase master
This moves new-feature to the tip of master, which lets us do a standard fast-forward merge from master:
git checkout master
git merge new-feature

